local nodes = {} -- List to store nodes (blocks)
local plr = game.Players.LocalPlayer
local hrp = plr.Character.HumanoidRootPart
local greenBlockColor = Color3.fromRGB(0, 255, 0) -- Green color
local url = "http://192.168.0.248:8080/" -- URL for the Python server

-- Function to get hand data from the Python server
local function getHeadData()
    local success, response = pcall(function()
        return game:GetService("HttpService"):GetAsync(url)
    end)
    if success then
        return response
    else
        warn("Failed to fetch head data")
        return "{}"
    end
end

-- Function to create and initialize green blocks
local function initializeBlocks()
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and part.Color == greenBlockColor then
            table.insert(nodes, part)
            part.CanCollide = false
            -- Ensure each block has BodyGyro and BodyPosition
            local bg = Instance.new("BodyGyro")
            bg.Parent = part
            bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
            bg.D = 100
            local bp = Instance.new("BodyPosition")
            bp.Parent = part
            bp.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bp.P = 25000
            bp.D = 1000
        end
    end
end

-- Function to update block positions and rotations based on head data
local function updateBlocks()
    local data = getHeadData()
    local headData = game:GetService("HttpService"):JSONDecode(data)

    for id, posData in pairs(headData) do
        -- Assume the head data corresponds to the green block
        local node = nodes[1] -- Using the first node (green block)
        if node then
            local pos = hrp.Position + Vector3.new(posData.x / 3, posData.y / 3, posData.z / 3) + Vector3.new(-70, 100, -150)
            node.Position = pos
            -- Assuming rotation data can be applied
            local lookAt = CFrame.lookAt(node.Position, hrp.Position)
            node.BodyGyro.CFrame = lookAt
            node.BodyPosition.Position = pos
        end
    end
end

-- Initialization
initializeBlocks()

-- Main loop to update blocks every 0.03 seconds
while true do
    updateBlocks()
    wait(0.03)
end
